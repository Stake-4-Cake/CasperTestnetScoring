version: '3.3'

services:
  db:
    image: postgres:latest
    container_name: postgresql
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    expose:
      - 6379
    env_file:
      - ./.env

  web:
    build: ./app
    container_name: web
    command: sh -c "python manage.py migrate --noinput && python manage.py collectstatic --noinput --clear && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
#    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - /etc/letsencrypt/ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

  celery:
    build: ./app
    command: celery -A config worker -B --loglevel=DEBUG
    container_name: celery
    restart: always
    depends_on:
      - nginx
      - redis
    env_file:
      - ./.env

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email s4c.data@gmail.com -d s4c.pro --agree-tos

volumes:
  postgres_data:
  static_volume:
  media_volume: